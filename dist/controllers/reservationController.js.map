{"version":3,"sources":["../../controllers/reservationController.js"],"names":["getReservation","req","res","send","knex","join","select","orderBy","err","status","message","getByIdReservation","where","id","params","createReservation","resident_id","place","date","body","insert","updateReservation","update","fn","now","deleteReservation","resident","from","length","token","headers","authorization","split","jwt","decode","admin","delete"],"mappings":";;;;;;AAAA,MAAMA,cAAc,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvC,MAAI;AACAA,IAAAA,GAAG,CAACC,IAAJ,EAAS,MAAMC,IAAI,CAAC,cAAD,CAAJ,CAAqBC,IAArB,CAA0B,WAA1B,EAAuC,0BAAvC,EAAmE,cAAnE,EAAmFC,MAAnF,CAA0F,gBAA1F,EAA4G,oBAA5G,EAAkI,mBAAlI,EAAuJC,OAAvJ,CAA+J,yBAA/J,CAAf;AACH,GAFD,CAEE,OAAOC,GAAP,EAAY;AACVN,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,OAAO,EAAEF;AAAX,KAArB;AACH;AAEJ,CAPD;;AASA,MAAMG,kBAAkB,GAAG,OAAOV,GAAP,EAAYC,GAAZ,KAAoB;AAC3C,MAAI;AACAA,IAAAA,GAAG,CAACC,IAAJ,EAAS,MAAMC,IAAI,CAAC,cAAD,CAAJ,CAAqBC,IAArB,CAA0B,WAA1B,EAAuC,0BAAvC,EAAmE,cAAnE,EAAmFC,MAAnF,CAA0F,gBAA1F,EAA4G,oBAA5G,EAAkI,mBAAlI,EAAuJM,KAAvJ,CAA6J;AAAEC,MAAAA,EAAE,EAAEZ,GAAG,CAACa,MAAJ,CAAWD;AAAjB,KAA7J,CAAf;AACH,GAFD,CAEE,OAAOL,GAAP,EAAY;AACVN,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,OAAO,EAAEF;AAAX,KAArB;AACH;AACJ,CAND;;AAQA,MAAMO,iBAAiB,GAAG,OAAOd,GAAP,EAAYC,GAAZ,KAAoB;AAC1C,QAAM;AAAEc,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAA+BjB,GAAG,CAACkB,IAAzC;AAEA,MAAI,CAACH,WAAD,IAAgB,CAACC,KAAjB,IAA0B,CAACC,IAA/B,EAAqC,OAAOhB,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,IAAAA,OAAO,EAAE;AAAX,GAArB,CAAP;;AAErC,MAAI;AACA,UAAMN,IAAI,CAAC,cAAD,CAAJ,CAAqBgB,MAArB,CAA4BnB,GAAG,CAACkB,IAAhC,CAAN;AACAjB,IAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAT;AACH,GAHD,CAGE,OAAOF,GAAP,EAAY;AACVN,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,OAAO,EAAEF;AAAX,KAArB;AACH;AACJ,CAXD;;AAaA,MAAMa,iBAAiB,GAAG,OAAOpB,GAAP,EAAYC,GAAZ,KAAoB;AAE1C,MAAI;AACA,UAAME,IAAI,CAAC,cAAD,CAAJ,CAAqBQ,KAArB,CAA2B;AAAEC,MAAAA,EAAE,EAAEZ,GAAG,CAACa,MAAJ,CAAWD;AAAjB,KAA3B,EAAkDS,MAAlD,CAAyDrB,GAAG,CAACkB,IAA7D,EAAmEG,MAAnE,CAA0E,YAA1E,EAAwFlB,IAAI,CAACmB,EAAL,CAAQC,GAAR,EAAxF,CAAN;AACAtB,IAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAT;AACH,GAHD,CAGE,OAAOF,GAAP,EAAY;AACVN,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,OAAO,EAAEF;AAAX,KAArB;AACH;AACJ,CARD;;AAUA,MAAMiB,iBAAiB,GAAG,OAAOxB,GAAP,EAAYC,GAAZ,KAAoB;AAC1C,MAAI;AACA,QAAIwB,QAAQ,GAAG,MAAMtB,IAAI,CAACE,MAAL,CAAY,IAAZ,EAAkBqB,IAAlB,CAAuB,cAAvB,EAAuCf,KAAvC,CAA6C;AAAEC,MAAAA,EAAE,EAAEZ,GAAG,CAACa,MAAJ,CAAWD;AAAjB,KAA7C,CAArB;AACA,QAAI,CAACa,QAAQ,CAACE,MAAd,EAAsB,OAAO1B,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACtB,QAAImB,KAAK,GAAG5B,GAAG,CAAC6B,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAZ;AACA,QAAIC,GAAG,CAACC,MAAJ,CAAWL,KAAX,EAAkBM,KAAlB,KAA4B,CAAhC,EAAmC,OAAOjC,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACnC,UAAMN,IAAI,CAAC,cAAD,CAAJ,CAAqBQ,KAArB,CAA2B;AAAEC,MAAAA,EAAE,EAAEZ,GAAG,CAACa,MAAJ,CAAWD;AAAjB,KAA3B,EAAkDuB,MAAlD,EAAN;AACAlC,IAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAT;AACH,GAPD,CAOE,OAAOF,GAAP,EAAY;AACVN,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,MAAAA,OAAO,EAAEF;AAAX,KAArB;AACH;AACJ,CAXD;;QAaSR,c,GAAAA,c;QAAgBW,kB,GAAAA,kB;QAAoBI,iB,GAAAA,iB;QAAmBM,iB,GAAAA,iB;QAAmBI,iB,GAAAA,iB","sourcesContent":["const getReservation = async (req, res) => {\r\n    try {\r\n        res.send(await knex('reservations').join('residents', 'reservations.resident_id', 'residents.id').select('residents.name', 'reservations.place', 'reservations.date').orderBy('reservations.updated_at'))\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n\r\n}\r\n\r\nconst getByIdReservation = async (req, res) => {\r\n    try {\r\n        res.send(await knex('reservations').join('residents', 'reservations.resident_id', 'residents.id').select('residents.name', 'reservations.place', 'reservations.date').where({ id: req.params.id }))\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n}\r\n\r\nconst createReservation = async (req, res) => {\r\n    const { resident_id, place, date } = req.body\r\n\r\n    if (!resident_id || !place || !date) return res.status(400).send({ message: 'Por favor preencha todos os campos' })\r\n\r\n    try {\r\n        await knex('reservations').insert(req.body)\r\n        res.send({ message: \"Reserva efetuada com sucesso!\" })\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n}\r\n\r\nconst updateReservation = async (req, res) => {\r\n\r\n    try {\r\n        await knex('reservations').where({ id: req.params.id }).update(req.body).update('updated_at', knex.fn.now())\r\n        res.send({ message: \"Atualizado com sucesso!\" })\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n}\r\n\r\nconst deleteReservation = async (req, res) => {\r\n    try {\r\n        let resident = await knex.select('id').from('reservations').where({ id: req.params.id })\r\n        if (!resident.length) return res.status(404).send({ message: \"Usuário não encontrado\" })\r\n        let token = req.headers.authorization.split(\" \")[1]\r\n        if (jwt.decode(token).admin === 0) return res.status(401).send({ message: \"Usuário não tem permissões para exclusão\" })\r\n        await knex('reservations').where({ id: req.params.id }).delete()\r\n        res.send({ message: \"Excluido com sucesso!\" })\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n}\r\n\r\nexport { getReservation, getByIdReservation, createReservation, updateReservation, deleteReservation }\r\n"],"file":"reservationController.js"}