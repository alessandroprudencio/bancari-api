{"version":3,"sources":["../../controllers/expenditureController.js"],"names":["getExpenditure","req","res","send","knex","select","orderBy","err","status","message","getByIdExpenditure","where","id","params","createExpenditure","value","name","body","expenditure","insert","returning","user_id","updateExpenditure","update","fn","now","deleteExpenditure","resident","from","length","delete"],"mappings":"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","sourcesContent":["const getExpenditure = async (req, res) => {\r\n    try {\r\n        res.send(await knex('expenditures').select('id', 'value', 'updated_at').orderBy('updated_at', 'desc'))\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n\r\n}\r\n\r\nconst getByIdExpenditure = async (req, res) => {\r\n    try {\r\n        res.send(await knex('expenditures').select('id', 'value', 'updated_at').orderBy('updated_at', 'desc').where({ id: req.params.id }))\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n}\r\n\r\nconst createExpenditure = async (req, res) => {\r\n    const { value, name } = req.body\r\n    if (!value || !name) return res.status(400).send({ message: 'Por favor preencha todos os campos' })\r\n    try {\r\n        let expenditure = await knex('expenditures').insert(req.body).returning(['id', 'created_at'])\r\n        res.send({ id: expenditure[0].id, user_id: expenditure[0].user_id, message: \"Despesas cadastrada com sucesso!\" })\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n}\r\n\r\nconst updateExpenditure = async (req, res) => {\r\n\r\n    try {\r\n        await knex('expenditures').where({ id: req.params.id }).update(req.body).update('updated_at', knex.fn.now())\r\n        res.send({ message: \"Atualizado com sucesso!\" })\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n}\r\n\r\nconst deleteExpenditure = async (req, res) => {\r\n    try {\r\n        let resident = await knex.select('id').from('expenditures').where({ id: req.params.id })\r\n        if (!resident.length) return res.status(404).send({ message: \"Despesa nÃ£o encontrada\" })\r\n        await knex('expenditures').where({ id: req.params.id }).delete()\r\n        res.send({ message: \"Excluido com sucesso!\" })\r\n    } catch (err) {\r\n        res.status(500).send({ message: err })\r\n    }\r\n}\r\n\r\nexport { getExpenditure, getByIdExpenditure, createExpenditure, updateExpenditure, deleteExpenditure }\r\n"],"file":"expenditureController.js"}