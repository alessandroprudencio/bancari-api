{"version":3,"sources":["../../middleware/uploadFile.js"],"names":["upload","req","res","type","allowedMimes","files","file","undefined","status","send","message","name","size","mimetype","md5","includes","err","nameFile","path","extname","mv"],"mappings":";;;;;;AAAA;;AACA,MAAMA,MAAM,GAAG,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAAuBC,YAAvB,KAAwC;AACnD,MAAGH,GAAG,CAACI,KAAJ,CAAUC,IAAV,IAAgBC,SAAnB,EAA6B,OAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,IAAAA,OAAO,EAAE;AAAV,GAArB,CAAP;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,MAAgCb,GAAG,CAACI,KAAJ,CAAUC,IAAhD;AACA,MAAI,CAACF,YAAY,CAACW,QAAb,CAAsBF,QAAtB,CAAL,EAAsC,OAAOX,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB,CAAP;AACtC,MAAIE,IAAI,GAAG,KAAK,OAAO,IAAZ,CAAX,EAA8B,OAAOV,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oCAArB,CAAP;AAC9B,MAAI,CAAC,oBAAW,SAAX,CAAL,EAA4B,mBAAU,SAAV,EAAqB,KAArB,EAA6BO,GAAD,IAAS;AAAE,QAAIA,GAAJ,EAAS,OAAOd,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,GAArB,CAAP;AAAkC,GAAlF;AAC5B,MAAI,CAAC,oBAAY,WAAUb,IAAK,EAA3B,CAAL,EAAoC,mBAAW,WAAUA,IAAK,EAA1B,EAA6B,KAA7B,EAAqCa,GAAD,IAAS;AAAE,QAAIA,GAAJ,EAAS,OAAOd,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,GAArB,CAAP;AAAkC,GAA1F;AACpC,QAAMC,QAAQ,GAAI,GAAEd,IAAK,GAAR,GAAaW,GAAb,GAAoBI,IAAI,CAACC,OAAL,CAAaR,IAAb,CAArC;;AACA,MAAI;AACA,UAAMV,GAAG,CAACI,KAAJ,CAAUC,IAAV,CAAec,EAAf,CAAkB,aAAaH,QAA/B,CAAN;AACA,WAAOA,QAAP;AACH,GAHD,CAGE,OAAOD,GAAP,EAAY;AACV,WAAOd,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,GAArB,CAAP;AACH;AACJ,CAdD;;kBAeehB,M","sourcesContent":["import { mkdirSync, existsSync } from \"fs\";\r\nconst upload = async (req, res, type, allowedMimes) => {\r\n    if(req.files.file==undefined)return res.status(400).send({message:`Nome do input inválido, por favor forneça: 'file' `})\r\n    const { name, size, mimetype, md5 } = req.files.file\r\n    if (!allowedMimes.includes(mimetype)) return res.status(400).send({ message: \"Tipo de arquivo enviado não permitido !\" })\r\n    if (size > 5 * (1024 * 1024)) return res.status(400).send('Tamanho de arquivo não permitido !')\r\n    if (!existsSync(\"uploads\")) mkdirSync(\"uploads\", 0o776, (err) => { if (err) return res.status(500).send(err) })\r\n    if (!existsSync(`uploads/${type}`)) mkdirSync(`uploads/${type}`, 0o776, (err) => { if (err) return res.status(500).send(err) })\r\n    const nameFile = `${type}/` + md5 + (path.extname(name))\r\n    try {\r\n        await req.files.file.mv('uploads/' + nameFile)\r\n        return nameFile\r\n    } catch (err) {\r\n        return res.status(500).send(err)\r\n    }\r\n}\r\nexport default upload"],"file":"uploadFile.js"}