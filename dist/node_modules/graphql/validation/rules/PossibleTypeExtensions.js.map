{"version":3,"sources":["../../../../../node_modules/graphql/validation/rules/PossibleTypeExtensions.mjs"],"names":["_defKindToExtKind","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","didYouMean","suggestionList","GraphQLError","Kind","isTypeDefinitionNode","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","extendingUnknownTypeMessage","typeName","suggestedTypes","concat","map","x","extendingDifferentTypeKindMessage","kind","PossibleTypeExtensions","context","schema","getSchema","definedTypes","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","getDocument","definitions","Symbol","iterator","_step","next","done","def","name","err","return","ScalarTypeExtension","checkExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","node","defNode","existingType","getType","expectedKind","defKindToExtKind","reportError","extensionKindToTypeName","_expectedKind","typeToExtKind","allTypeNames","keys","getTypeMap","SCALAR_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_DEFINITION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_DEFINITION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_DEFINITION","UNION_TYPE_EXTENSION","ENUM_TYPE_DEFINITION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_DEFINITION","INPUT_OBJECT_TYPE_EXTENSION","type"],"mappings":"AAAA,IAAIA,iBAAJ;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,OAAOQ,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,eAArC,EAAsDC,WAAtD,EAAmEC,UAAnE,EAA+EC,iBAA/E,QAAwG,uBAAxG;AACA,OAAO,SAASC,2BAAT,CAAqCC,QAArC,EAA+CC,cAA/C,EAA+D;AACpE,SAAO,wBAAwBC,MAAxB,CAA+BF,QAA/B,EAAyC,+BAAzC,IAA4EZ,UAAU,CAACa,cAAc,CAACE,GAAf,CAAmB,UAAUC,CAAV,EAAa;AAC5H,WAAO,KAAKF,MAAL,CAAYE,CAAZ,EAAe,IAAf,CAAP;AACD,GAF6F,CAAD,CAA7F;AAGD;AACD,OAAO,SAASC,iCAAT,CAA2CL,QAA3C,EAAqDM,IAArD,EAA2D;AAChE,SAAO,qBAAqBJ,MAArB,CAA4BI,IAA5B,EAAkC,UAAlC,EAA8CJ,MAA9C,CAAqDF,QAArD,EAA+D,KAA/D,CAAP;AACD;AACD;;;;;;AAMA,OAAO,SAASO,sBAAT,CAAgCC,OAAhC,EAAyC;AAC9C,MAAIC,MAAM,GAAGD,OAAO,CAACE,SAAR,EAAb;AACA,MAAIC,YAAY,GAAG5B,MAAM,CAAC6B,MAAP,CAAc,IAAd,CAAnB;AACA,MAAIC,yBAAyB,GAAG,IAAhC;AACA,MAAIC,iBAAiB,GAAG,KAAxB;AACA,MAAIC,cAAc,GAAGC,SAArB;;AAEA,MAAI;AACF,SAAK,IAAIC,SAAS,GAAGT,OAAO,CAACU,WAAR,GAAsBC,WAAtB,CAAkCC,MAAM,CAACC,QAAzC,GAAhB,EAAsEC,KAA3E,EAAkF,EAAET,yBAAyB,GAAG,CAACS,KAAK,GAAGL,SAAS,CAACM,IAAV,EAAT,EAA2BC,IAAzD,CAAlF,EAAkJX,yBAAyB,GAAG,IAA9K,EAAoL;AAClL,UAAIY,GAAG,GAAGH,KAAK,CAACxC,KAAhB;;AAEA,UAAIU,oBAAoB,CAACiC,GAAD,CAAxB,EAA+B;AAC7Bd,QAAAA,YAAY,CAACc,GAAG,CAACC,IAAJ,CAAS5C,KAAV,CAAZ,GAA+B2C,GAA/B;AACD;AACF;AACF,GARD,CAQE,OAAOE,GAAP,EAAY;AACZb,IAAAA,iBAAiB,GAAG,IAApB;AACAC,IAAAA,cAAc,GAAGY,GAAjB;AACD,GAXD,SAWU;AACR,QAAI;AACF,UAAI,CAACd,yBAAD,IAA8BI,SAAS,CAACW,MAAV,IAAoB,IAAtD,EAA4D;AAC1DX,QAAAA,SAAS,CAACW,MAAV;AACD;AACF,KAJD,SAIU;AACR,UAAId,iBAAJ,EAAuB;AACrB,cAAMC,cAAN;AACD;AACF;AACF;;AAED,SAAO;AACLc,IAAAA,mBAAmB,EAAEC,cADhB;AAELC,IAAAA,mBAAmB,EAAED,cAFhB;AAGLE,IAAAA,sBAAsB,EAAEF,cAHnB;AAILG,IAAAA,kBAAkB,EAAEH,cAJf;AAKLI,IAAAA,iBAAiB,EAAEJ,cALd;AAMLK,IAAAA,wBAAwB,EAAEL;AANrB,GAAP;;AASA,WAASA,cAAT,CAAwBM,IAAxB,EAA8B;AAC5B,QAAIpC,QAAQ,GAAGoC,IAAI,CAACV,IAAL,CAAU5C,KAAzB;AACA,QAAIuD,OAAO,GAAG1B,YAAY,CAACX,QAAD,CAA1B;AACA,QAAIsC,YAAY,GAAG7B,MAAM,IAAIA,MAAM,CAAC8B,OAAP,CAAevC,QAAf,CAA7B;;AAEA,QAAIqC,OAAJ,EAAa;AACX,UAAIG,YAAY,GAAGC,gBAAgB,CAACJ,OAAO,CAAC/B,IAAT,CAAnC;;AAEA,UAAIkC,YAAY,KAAKJ,IAAI,CAAC9B,IAA1B,EAAgC;AAC9BE,QAAAA,OAAO,CAACkC,WAAR,CAAoB,IAAIpD,YAAJ,CAAiBe,iCAAiC,CAACL,QAAD,EAAW2C,uBAAuB,CAACH,YAAD,CAAlC,CAAlD,EAAqG,CAACH,OAAD,EAAUD,IAAV,CAArG,CAApB;AACD;AACF,KAND,MAMO,IAAIE,YAAJ,EAAkB;AACvB,UAAIM,aAAa,GAAGC,aAAa,CAACP,YAAD,CAAjC;;AAEA,UAAIM,aAAa,KAAKR,IAAI,CAAC9B,IAA3B,EAAiC;AAC/BE,QAAAA,OAAO,CAACkC,WAAR,CAAoB,IAAIpD,YAAJ,CAAiBe,iCAAiC,CAACL,QAAD,EAAW2C,uBAAuB,CAACC,aAAD,CAAlC,CAAlD,EAAsGR,IAAtG,CAApB;AACD;AACF,KANM,MAMA;AACL,UAAIU,YAAY,GAAG/D,MAAM,CAACgE,IAAP,CAAYpC,YAAZ,CAAnB;;AAEA,UAAIF,MAAJ,EAAY;AACVqC,QAAAA,YAAY,GAAGA,YAAY,CAAC5C,MAAb,CAAoBnB,MAAM,CAACgE,IAAP,CAAYtC,MAAM,CAACuC,UAAP,EAAZ,CAApB,CAAf;AACD;;AAED,UAAI/C,cAAc,GAAGZ,cAAc,CAACW,QAAD,EAAW8C,YAAX,CAAnC;AACAtC,MAAAA,OAAO,CAACkC,WAAR,CAAoB,IAAIpD,YAAJ,CAAiBS,2BAA2B,CAACC,QAAD,EAAWC,cAAX,CAA5C,EAAwEmC,IAAI,CAACV,IAA7E,CAApB;AACD;AACF;AACF;AACD,IAAIe,gBAAgB,IAAI/D,iBAAiB,GAAG,EAApB,EAAwBC,eAAe,CAACD,iBAAD,EAAoBa,IAAI,CAAC0D,sBAAzB,EAAiD1D,IAAI,CAAC2D,qBAAtD,CAAvC,EAAqHvE,eAAe,CAACD,iBAAD,EAAoBa,IAAI,CAAC4D,sBAAzB,EAAiD5D,IAAI,CAAC6D,qBAAtD,CAApI,EAAkNzE,eAAe,CAACD,iBAAD,EAAoBa,IAAI,CAAC8D,yBAAzB,EAAoD9D,IAAI,CAAC+D,wBAAzD,CAAjO,EAAqT3E,eAAe,CAACD,iBAAD,EAAoBa,IAAI,CAACgE,qBAAzB,EAAgDhE,IAAI,CAACiE,oBAArD,CAApU,EAAgZ7E,eAAe,CAACD,iBAAD,EAAoBa,IAAI,CAACkE,oBAAzB,EAA+ClE,IAAI,CAACmE,mBAApD,CAA/Z,EAAye/E,eAAe,CAACD,iBAAD,EAAoBa,IAAI,CAACoE,4BAAzB,EAAuDpE,IAAI,CAACqE,2BAA5D,CAAxf,EAAklBlF,iBAAtlB,CAApB;;AAEA,SAASmE,aAAT,CAAuBgB,IAAvB,EAA6B;AAC3B,MAAIpE,YAAY,CAACoE,IAAD,CAAhB,EAAwB;AACtB,WAAOtE,IAAI,CAAC2D,qBAAZ;AACD,GAFD,MAEO,IAAIxD,YAAY,CAACmE,IAAD,CAAhB,EAAwB;AAC7B,WAAOtE,IAAI,CAAC6D,qBAAZ;AACD,GAFM,MAEA,IAAIzD,eAAe,CAACkE,IAAD,CAAnB,EAA2B;AAChC,WAAOtE,IAAI,CAAC+D,wBAAZ;AACD,GAFM,MAEA,IAAI1D,WAAW,CAACiE,IAAD,CAAf,EAAuB;AAC5B,WAAOtE,IAAI,CAACiE,oBAAZ;AACD,GAFM,MAEA,IAAI3D,UAAU,CAACgE,IAAD,CAAd,EAAsB;AAC3B,WAAOtE,IAAI,CAACmE,mBAAZ;AACD,GAFM,MAEA,IAAI5D,iBAAiB,CAAC+D,IAAD,CAArB,EAA6B;AAClC,WAAOtE,IAAI,CAACqE,2BAAZ;AACD;AACF;;AAED,SAASjB,uBAAT,CAAiCrC,IAAjC,EAAuC;AACrC,UAAQA,IAAR;AACE,SAAKf,IAAI,CAAC2D,qBAAV;AACE,aAAO,QAAP;;AAEF,SAAK3D,IAAI,CAAC6D,qBAAV;AACE,aAAO,QAAP;;AAEF,SAAK7D,IAAI,CAAC+D,wBAAV;AACE,aAAO,WAAP;;AAEF,SAAK/D,IAAI,CAACiE,oBAAV;AACE,aAAO,OAAP;;AAEF,SAAKjE,IAAI,CAACmE,mBAAV;AACE,aAAO,MAAP;;AAEF,SAAKnE,IAAI,CAACqE,2BAAV;AACE,aAAO,cAAP;;AAEF;AACE,aAAO,cAAP;AApBJ;AAsBD","sourcesContent":["var _defKindToExtKind;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport didYouMean from '../../jsutils/didYouMean';\nimport suggestionList from '../../jsutils/suggestionList';\nimport { GraphQLError } from '../../error/GraphQLError';\nimport { Kind } from '../../language/kinds';\nimport { isTypeDefinitionNode } from '../../language/predicates';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../../type/definition';\nexport function extendingUnknownTypeMessage(typeName, suggestedTypes) {\n  return \"Cannot extend type \\\"\".concat(typeName, \"\\\" because it is not defined.\") + didYouMean(suggestedTypes.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\nexport function extendingDifferentTypeKindMessage(typeName, kind) {\n  return \"Cannot extend non-\".concat(kind, \" type \\\"\").concat(typeName, \"\\\".\");\n}\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\n\nexport function PossibleTypeExtensions(context) {\n  var schema = context.getSchema();\n  var definedTypes = Object.create(null);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = context.getDocument().definitions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var def = _step.value;\n\n      if (isTypeDefinitionNode(def)) {\n        definedTypes[def.name.value] = def;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension\n  };\n\n  function checkExtension(node) {\n    var typeName = node.name.value;\n    var defNode = definedTypes[typeName];\n    var existingType = schema && schema.getType(typeName);\n\n    if (defNode) {\n      var expectedKind = defKindToExtKind[defNode.kind];\n\n      if (expectedKind !== node.kind) {\n        context.reportError(new GraphQLError(extendingDifferentTypeKindMessage(typeName, extensionKindToTypeName(expectedKind)), [defNode, node]));\n      }\n    } else if (existingType) {\n      var _expectedKind = typeToExtKind(existingType);\n\n      if (_expectedKind !== node.kind) {\n        context.reportError(new GraphQLError(extendingDifferentTypeKindMessage(typeName, extensionKindToTypeName(_expectedKind)), node));\n      }\n    } else {\n      var allTypeNames = Object.keys(definedTypes);\n\n      if (schema) {\n        allTypeNames = allTypeNames.concat(Object.keys(schema.getTypeMap()));\n      }\n\n      var suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(new GraphQLError(extendingUnknownTypeMessage(typeName, suggestedTypes), node.name));\n    }\n  }\n}\nvar defKindToExtKind = (_defKindToExtKind = {}, _defineProperty(_defKindToExtKind, Kind.SCALAR_TYPE_DEFINITION, Kind.SCALAR_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.OBJECT_TYPE_DEFINITION, Kind.OBJECT_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INTERFACE_TYPE_DEFINITION, Kind.INTERFACE_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.UNION_TYPE_DEFINITION, Kind.UNION_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.ENUM_TYPE_DEFINITION, Kind.ENUM_TYPE_EXTENSION), _defineProperty(_defKindToExtKind, Kind.INPUT_OBJECT_TYPE_DEFINITION, Kind.INPUT_OBJECT_TYPE_EXTENSION), _defKindToExtKind);\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  } else if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  } else if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  } else if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  } else if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  } else if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n\n    default:\n      return 'unknown type';\n  }\n}\n"],"file":"PossibleTypeExtensions.js"}