{"version":3,"sources":["../../../../../node_modules/graphql/validation/rules/KnownArgumentNames.mjs"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","GraphQLError","suggestionList","didYouMean","Kind","specifiedDirectives","unknownArgMessage","argName","fieldName","typeName","suggestedArgs","map","x","unknownDirectiveArgMessage","directiveName","KnownArgumentNames","context","KnownArgumentNamesOnDirectives","Argument","argNode","argDef","getArgument","fieldDef","getFieldDef","parentType","getParentType","name","knownArgsNames","args","arg","reportError","directiveArgs","create","schema","getSchema","definedDirectives","getDirectives","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","directive","err","return","astDefinitions","getDocument","definitions","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","def","kind","DIRECTIVE_DEFINITION","Directive","directiveNode","knownArgs","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","indexOf","suggestions"],"mappings":"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","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GraphQLError } from '../../error/GraphQLError';\nimport suggestionList from '../../jsutils/suggestionList';\nimport didYouMean from '../../jsutils/didYouMean';\nimport { Kind } from '../../language/kinds';\nimport { specifiedDirectives } from '../../type/directives';\nexport function unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on field \\\"\").concat(fieldName, \"\\\" of type \\\"\").concat(typeName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\nexport function unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  return \"Unknown argument \\\"\".concat(argName, \"\\\" on directive \\\"@\").concat(directiveName, \"\\\".\") + didYouMean(suggestedArgs.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  }));\n}\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\n\nexport function KnownArgumentNames(context) {\n  return _objectSpread({}, KnownArgumentNamesOnDirectives(context), {\n    Argument: function Argument(argNode) {\n      var argDef = context.getArgument();\n      var fieldDef = context.getFieldDef();\n      var parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        var argName = argNode.name.value;\n        var knownArgsNames = fieldDef.args.map(function (arg) {\n          return arg.name;\n        });\n        context.reportError(new GraphQLError(unknownArgMessage(argName, fieldDef.name, parentType.name, suggestionList(argName, knownArgsNames)), argNode));\n      }\n    }\n  });\n} // @internal\n\nexport function KnownArgumentNamesOnDirectives(context) {\n  var directiveArgs = Object.create(null);\n  var schema = context.getSchema();\n  var definedDirectives = schema ? schema.getDirectives() : specifiedDirectives;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = definedDirectives[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var directive = _step.value;\n      directiveArgs[directive.name] = directive.args.map(function (arg) {\n        return arg.name;\n      });\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var astDefinitions = context.getDocument().definitions;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = astDefinitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var def = _step2.value;\n\n      if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n        directiveArgs[def.name.value] = def.arguments ? def.arguments.map(function (arg) {\n          return arg.name.value;\n        }) : [];\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    Directive: function Directive(directiveNode) {\n      var directiveName = directiveNode.name.value;\n      var knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = directiveNode.arguments[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var argNode = _step3.value;\n            var argName = argNode.name.value;\n\n            if (knownArgs.indexOf(argName) === -1) {\n              var suggestions = suggestionList(argName, knownArgs);\n              context.reportError(new GraphQLError(unknownDirectiveArgMessage(argName, directiveName, suggestions), argNode));\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n  };\n}\n"],"file":"KnownArgumentNames.js"}