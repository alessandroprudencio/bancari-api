{"version":3,"sources":["../../../../node_modules/graphql/validation/ValidationContext.mjs"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","visit","visitWithTypeInfo","Kind","TypeInfo","ASTValidationContext","ast","_ast","_errors","_fragments","undefined","_fragmentSpreads","Map","_recursivelyReferencedFragments","_proto","reportError","error","push","getErrors","getDocument","getFragment","name","fragments","definitions","reduce","frags","statement","kind","FRAGMENT_DEFINITION","value","getFragmentSpreads","node","spreads","get","setsToVisit","length","set","pop","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","selections","Symbol","iterator","_step","next","done","selection","FRAGMENT_SPREAD","selectionSet","err","return","getRecursivelyReferencedFragments","operation","collectedNames","nodesToVisit","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","spread","fragName","fragment","SDLValidationContext","_ASTValidationContext","schema","_this","call","_schema","_proto2","getSchema","ValidationContext","_ASTValidationContext2","typeInfo","_this2","_typeInfo","_variableUsages","_recursiveVariableUsages","_proto3","getVariableUsages","usages","newUsages","VariableDefinition","Variable","variable","type","getInputType","defaultValue","getDefaultValue","getRecursiveVariableUsages","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","frag","concat","getType","getParentType","getParentInputType","getFieldDef","getDirective","getArgument"],"mappings":"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","sourcesContent":["function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nimport { visit, visitWithTypeInfo } from '../language/visitor';\nimport { Kind } from '../language/kinds';\nimport { TypeInfo } from '../utilities/TypeInfo';\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport var ASTValidationContext =\n/*#__PURE__*/\nfunction () {\n  function ASTValidationContext(ast) {\n    this._ast = ast;\n    this._errors = [];\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n  }\n\n  var _proto = ASTValidationContext.prototype;\n\n  _proto.reportError = function reportError(error) {\n    this._errors.push(error);\n  };\n\n  _proto.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  _proto.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  _proto.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n\n        return frags;\n      }, Object.create(null));\n    }\n\n    return fragments[name];\n  };\n\n  _proto.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = set.selections[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var selection = _step.value;\n\n            if (selection.kind === Kind.FRAGMENT_SPREAD) {\n              spreads.push(selection);\n            } else if (selection.selectionSet) {\n              setsToVisit.push(selection.selectionSet);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  };\n\n  _proto.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n\n      while (nodesToVisit.length !== 0) {\n        var node = nodesToVisit.pop();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.getFragmentSpreads(node)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var spread = _step2.value;\n            var fragName = spread.name.value;\n\n            if (collectedNames[fragName] !== true) {\n              collectedNames[fragName] = true;\n              var fragment = this.getFragment(fragName);\n\n              if (fragment) {\n                fragments.push(fragment);\n                nodesToVisit.push(fragment.selectionSet);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  };\n\n  return ASTValidationContext;\n}();\nexport var SDLValidationContext =\n/*#__PURE__*/\nfunction (_ASTValidationContext) {\n  _inheritsLoose(SDLValidationContext, _ASTValidationContext);\n\n  function SDLValidationContext(ast, schema) {\n    var _this;\n\n    _this = _ASTValidationContext.call(this, ast) || this;\n    _this._schema = schema;\n    return _this;\n  }\n\n  var _proto2 = SDLValidationContext.prototype;\n\n  _proto2.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  return SDLValidationContext;\n}(ASTValidationContext);\nexport var ValidationContext =\n/*#__PURE__*/\nfunction (_ASTValidationContext2) {\n  _inheritsLoose(ValidationContext, _ASTValidationContext2);\n\n  function ValidationContext(schema, ast, typeInfo) {\n    var _this2;\n\n    _this2 = _ASTValidationContext2.call(this, ast) || this;\n    _this2._schema = schema;\n    _this2._typeInfo = typeInfo;\n    _this2._variableUsages = new Map();\n    _this2._recursiveVariableUsages = new Map();\n    return _this2;\n  }\n\n  var _proto3 = ValidationContext.prototype;\n\n  _proto3.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  _proto3.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new TypeInfo(this._schema);\n      visit(node, visitWithTypeInfo(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({\n            node: variable,\n            type: typeInfo.getInputType(),\n            defaultValue: typeInfo.getDefaultValue()\n          });\n        }\n      }));\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.getRecursivelyReferencedFragments(operation)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var frag = _step3.value;\n          usages = usages.concat(this.getVariableUsages(frag));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  };\n\n  _proto3.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  _proto3.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  _proto3.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  _proto3.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  _proto3.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  _proto3.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  _proto3.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}(ASTValidationContext);\n"],"file":"ValidationContext.js"}