{"version":3,"sources":["../../../../node_modules/graphql/utilities/coerceValue.mjs"],"names":["forEach","isCollection","objectValues","inspect","isInvalid","didYouMean","isObjectLike","suggestionList","GraphQLError","isScalarType","isEnumType","isInputObjectType","isListType","isNonNullType","coerceValue","value","type","blameNode","path","ofErrors","coercionError","concat","ofType","ofValue","parseResult","parseValue","name","error","message","enumValue","getValue","suggestions","String","getValues","map","itemType","errors","coercedValue","itemValue","index","coercedItem","atPath","add","push","_errors","_coercedValue","fields","getFields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","field","fieldValue","defaultValue","printPath","coercedField","err","return","_i","_Object$keys","Object","keys","length","fieldName","_suggestions","Error","moreErrors","prev","key","subMessage","originalError","pathStr","fullMessage","currentPath"],"mappings":"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","sourcesContent":["import { forEach, isCollection } from 'iterall';\nimport objectValues from '../polyfills/objectValues';\nimport inspect from '../jsutils/inspect';\nimport isInvalid from '../jsutils/isInvalid';\nimport didYouMean from '../jsutils/didYouMean';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport suggestionList from '../jsutils/suggestionList';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\nexport function coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if (isNonNullType(type)) {\n    if (value == null) {\n      return ofErrors([coercionError(\"Expected non-nullable type \".concat(inspect(type), \" not to be null\"), blameNode, path)]);\n    }\n\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if (value == null) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if (isScalarType(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n\n      if (isInvalid(parseResult)) {\n        return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path)]);\n      }\n\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path, ' ' + error.message, error)]);\n    }\n  }\n\n  if (isEnumType(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n\n    var suggestions = suggestionList(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path, didYouMean(suggestions))]);\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (isCollection(value)) {\n      var errors;\n      var coercedValue = [];\n      forEach(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n\n        if (coercedItem.errors) {\n          errors = add(errors, coercedItem.errors);\n        } else if (!errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return errors ? ofErrors(errors) : ofValue(coercedValue);\n    } // Lists accept a non-list value as a list of one.\n\n\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return ofErrors([coercionError(\"Expected type \".concat(type.name, \" to be an object\"), blameNode, path)]);\n    }\n\n    var _errors;\n\n    var _coercedValue = {};\n    var fields = type.getFields(); // Ensure every defined field is valid.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = objectValues(fields)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var field = _step.value;\n        var fieldValue = value[field.name];\n\n        if (isInvalid(fieldValue)) {\n          if (!isInvalid(field.defaultValue)) {\n            _coercedValue[field.name] = field.defaultValue;\n          } else if (isNonNullType(field.type)) {\n            _errors = add(_errors, coercionError(\"Field \".concat(printPath(atPath(path, field.name)), \" of required \") + \"type \".concat(inspect(field.type), \" was not provided\"), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, field.name));\n\n          if (coercedField.errors) {\n            _errors = add(_errors, coercedField.errors);\n          } else if (!_errors) {\n            _coercedValue[field.name] = coercedField.value;\n          }\n        }\n      } // Ensure every provided field is defined.\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    for (var _i = 0, _Object$keys = Object.keys(value); _i < _Object$keys.length; _i++) {\n      var fieldName = _Object$keys[_i];\n\n      if (!fields[fieldName]) {\n        var _suggestions = suggestionList(fieldName, Object.keys(fields));\n\n        _errors = add(_errors, coercionError(\"Field \\\"\".concat(fieldName, \"\\\" is not defined by type \").concat(type.name), blameNode, path, didYouMean(_suggestions)));\n      }\n    }\n\n    return _errors ? ofErrors(_errors) : ofValue(_coercedValue);\n  } // Not reachable. All possible input types have been considered.\n\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Unexpected input type: \\\"\".concat(inspect(type), \"\\\".\"));\n}\n\nfunction ofValue(value) {\n  return {\n    errors: undefined,\n    value: value\n  };\n}\n\nfunction ofErrors(errors) {\n  return {\n    errors: errors,\n    value: undefined\n  };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return {\n    prev: prev,\n    key: key\n  };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path);\n  var fullMessage = message;\n\n  if (pathStr) {\n    fullMessage += ' at ' + pathStr;\n  }\n\n  fullMessage += subMessage ? '.' + subMessage : '.'; // Return a GraphQLError instance\n\n  return new GraphQLError(fullMessage, blameNode, undefined, undefined, undefined, originalError);\n} // Build a string describing the path into the value where the error was found\n\n\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n\n  return pathStr ? 'value' + pathStr : '';\n}\n"],"file":"coerceValue.js"}