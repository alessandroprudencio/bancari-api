{"version":3,"sources":["../../../../node_modules/graphql/utilities/findBreakingChanges.mjs"],"names":["objectValues","keyMap","inspect","invariant","print","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isNonNullType","isListType","isNamedType","isRequiredArgument","isRequiredInputField","astFromValue","BreakingChangeType","Object","freeze","TYPE_REMOVED","TYPE_CHANGED_KIND","TYPE_REMOVED_FROM_UNION","VALUE_REMOVED_FROM_ENUM","REQUIRED_INPUT_FIELD_ADDED","INTERFACE_REMOVED_FROM_OBJECT","FIELD_REMOVED","FIELD_CHANGED_KIND","REQUIRED_ARG_ADDED","ARG_REMOVED","ARG_CHANGED_KIND","DIRECTIVE_REMOVED","DIRECTIVE_ARG_REMOVED","REQUIRED_DIRECTIVE_ARG_ADDED","DIRECTIVE_LOCATION_REMOVED","DangerousChangeType","VALUE_ADDED_TO_ENUM","TYPE_ADDED_TO_UNION","OPTIONAL_INPUT_FIELD_ADDED","OPTIONAL_ARG_ADDED","INTERFACE_ADDED_TO_OBJECT","ARG_DEFAULT_VALUE_CHANGE","findBreakingChanges","oldSchema","newSchema","breakingChanges","findSchemaChanges","filter","change","type","findDangerousChanges","dangerousChanges","concat","findTypeChanges","findDirectiveChanges","schemaChanges","directivesDiff","diff","getDirectives","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","removed","Symbol","iterator","_step","next","done","oldDirective","value","push","description","name","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","persisted","_step2","_ref2","_oldDirective","newDirective","argsDiff","args","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","added","_step3","newArg","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","oldArg","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","locations","_step5","location","indexOf","typesDiff","getTypeMap","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_iterator6","_step6","oldType","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_iterator7","_step7","_ref4","_oldType","newType","apply","findEnumTypeChanges","findUnionTypeChanges","findInputObjectTypeChanges","findObjectTypeChanges","findFieldChanges","constructor","typeKindName","fieldsDiff","getFields","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_iterator8","_step8","newField","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_iterator9","_step9","oldField","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_iterator10","_step10","_ref6","_oldField","_newField","isSafe","isChangeSafeForInputObjectFieldOrFieldArg","String","possibleTypesDiff","getTypes","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_iterator11","_step11","newPossibleType","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_iterator12","_step12","oldPossibleType","valuesDiff","getValues","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_iterator13","_step13","newValue","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_iterator14","_step14","oldValue","interfacesDiff","getInterfaces","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_iterator15","_step15","newInterface","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_iterator16","_step16","oldInterface","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_iterator17","_step17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_iterator18","_step18","_ref8","_oldField2","findArgChanges","isChangeSafeForObjectOrInterfaceField","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_iterator19","_step19","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_iterator20","_step20","_ref10","_oldArg","defaultValue","oldValueStr","stringifyValue","newValueStr","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_iterator21","_step21","_newArg","ofType","TypeError","ast","oldArray","newArray","oldMap","_ref11","newMap","_ref12","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_iterator22","_step22","oldItem","newItem","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_iterator23","_step23","_newItem"],"mappings":"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","sourcesContent":["import objectValues from '../polyfills/objectValues';\nimport keyMap from '../jsutils/keyMap';\nimport inspect from '../jsutils/inspect';\nimport invariant from '../jsutils/invariant';\nimport { print } from '../language/printer';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNonNullType, isListType, isNamedType, isRequiredArgument, isRequiredInputField } from '../type/definition';\nimport { astFromValue } from './astFromValue';\nexport var BreakingChangeType = Object.freeze({\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  REQUIRED_INPUT_FIELD_ADDED: 'REQUIRED_INPUT_FIELD_ADDED',\n  INTERFACE_REMOVED_FROM_OBJECT: 'INTERFACE_REMOVED_FROM_OBJECT',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  REQUIRED_ARG_ADDED: 'REQUIRED_ARG_ADDED',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  REQUIRED_DIRECTIVE_ARG_ADDED: 'REQUIRED_DIRECTIVE_ARG_ADDED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED'\n});\nexport var DangerousChangeType = Object.freeze({\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  OPTIONAL_INPUT_FIELD_ADDED: 'OPTIONAL_INPUT_FIELD_ADDED',\n  OPTIONAL_ARG_ADDED: 'OPTIONAL_ARG_ADDED',\n  INTERFACE_ADDED_TO_OBJECT: 'INTERFACE_ADDED_TO_OBJECT',\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE'\n});\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  var breakingChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in BreakingChangeType;\n  });\n  return breakingChanges;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  var dangerousChanges = findSchemaChanges(oldSchema, newSchema).filter(function (change) {\n    return change.type in DangerousChangeType;\n  });\n  return dangerousChanges;\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [].concat(findTypeChanges(oldSchema, newSchema), findDirectiveChanges(oldSchema, newSchema));\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var directivesDiff = diff(oldSchema.getDirectives(), newSchema.getDirectives());\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = directivesDiff.removed[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var oldDirective = _step.value;\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REMOVED,\n        description: \"\".concat(oldDirective.name, \" was removed.\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = directivesDiff.persisted[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref2 = _step2.value;\n      var _oldDirective = _ref2[0];\n      var newDirective = _ref2[1];\n      var argsDiff = diff(_oldDirective.args, newDirective.args);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = argsDiff.added[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var newArg = _step3.value;\n\n          if (isRequiredArgument(newArg)) {\n            schemaChanges.push({\n              type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n              description: \"A required arg \".concat(newArg.name, \" on directive \").concat(_oldDirective.name, \" was added.\")\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = argsDiff.removed[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var oldArg = _step4.value;\n          schemaChanges.push({\n            type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n            description: \"\".concat(oldArg.name, \" was removed from \").concat(_oldDirective.name, \".\")\n          });\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = _oldDirective.locations[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var location = _step5.value;\n\n          if (newDirective.locations.indexOf(location) === -1) {\n            schemaChanges.push({\n              type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n              description: \"\".concat(location, \" was removed from \").concat(_oldDirective.name, \".\")\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  var schemaChanges = [];\n  var typesDiff = diff(objectValues(oldSchema.getTypeMap()), objectValues(newSchema.getTypeMap()));\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = typesDiff.removed[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var oldType = _step6.value;\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_REMOVED,\n        description: \"\".concat(oldType.name, \" was removed.\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = typesDiff.persisted[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var _ref4 = _step7.value;\n      var _oldType = _ref4[0];\n      var newType = _ref4[1];\n\n      if (isEnumType(_oldType) && isEnumType(newType)) {\n        schemaChanges.push.apply(schemaChanges, findEnumTypeChanges(_oldType, newType));\n      } else if (isUnionType(_oldType) && isUnionType(newType)) {\n        schemaChanges.push.apply(schemaChanges, findUnionTypeChanges(_oldType, newType));\n      } else if (isInputObjectType(_oldType) && isInputObjectType(newType)) {\n        schemaChanges.push.apply(schemaChanges, findInputObjectTypeChanges(_oldType, newType));\n      } else if (isObjectType(_oldType) && isObjectType(newType)) {\n        schemaChanges.push.apply(schemaChanges, findObjectTypeChanges(_oldType, newType));\n      } else if (isInterfaceType(_oldType) && isInterfaceType(newType)) {\n        schemaChanges.push.apply(schemaChanges, findFieldChanges(_oldType, newType));\n      } else if (_oldType.constructor !== newType.constructor) {\n        schemaChanges.push({\n          type: BreakingChangeType.TYPE_CHANGED_KIND,\n          description: \"\".concat(_oldType.name, \" changed from \") + \"\".concat(typeKindName(_oldType), \" to \").concat(typeKindName(newType), \".\")\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = fieldsDiff.added[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var newField = _step8.value;\n\n      if (isRequiredInputField(newField)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n          description: \"A required field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n        });\n      } else {\n        schemaChanges.push({\n          type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n          description: \"An optional field \".concat(newField.name, \" on input type \").concat(oldType.name, \" was added.\")\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = fieldsDiff.removed[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var oldField = _step9.value;\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_REMOVED,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = fieldsDiff.persisted[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var _ref6 = _step10.value;\n      var _oldField = _ref6[0];\n      var _newField = _ref6[1];\n      var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldField.type, _newField.type);\n\n      if (!isSafe) {\n        schemaChanges.push({\n          type: BreakingChangeType.FIELD_CHANGED_KIND,\n          description: \"\".concat(oldType.name, \".\").concat(_oldField.name, \" changed type from \") + \"\".concat(String(_oldField.type), \" to \").concat(String(_newField.type), \".\")\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = possibleTypesDiff.added[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var newPossibleType = _step11.value;\n      schemaChanges.push({\n        type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n        description: \"\".concat(newPossibleType.name, \" was added to union type \").concat(oldType.name, \".\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n        _iterator11.return();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = possibleTypesDiff.removed[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var oldPossibleType = _step12.value;\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n        description: \"\".concat(oldPossibleType.name, \" was removed from union type \").concat(oldType.name, \".\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n        _iterator12.return();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  var schemaChanges = [];\n  var valuesDiff = diff(oldType.getValues(), newType.getValues());\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = valuesDiff.added[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var newValue = _step13.value;\n      schemaChanges.push({\n        type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n        description: \"\".concat(newValue.name, \" was added to enum type \").concat(oldType.name, \".\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = valuesDiff.removed[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var oldValue = _step14.value;\n      schemaChanges.push({\n        type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n        description: \"\".concat(oldValue.name, \" was removed from enum type \").concat(oldType.name, \".\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findObjectTypeChanges(oldType, newType) {\n  var schemaChanges = findFieldChanges(oldType, newType);\n  var interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n  var _iteratorNormalCompletion15 = true;\n  var _didIteratorError15 = false;\n  var _iteratorError15 = undefined;\n\n  try {\n    for (var _iterator15 = interfacesDiff.added[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n      var newInterface = _step15.value;\n      schemaChanges.push({\n        type: DangerousChangeType.INTERFACE_ADDED_TO_OBJECT,\n        description: \"\".concat(newInterface.name, \" added to interfaces implemented by \").concat(oldType.name, \".\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError15 = true;\n    _iteratorError15 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n        _iterator15.return();\n      }\n    } finally {\n      if (_didIteratorError15) {\n        throw _iteratorError15;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion16 = true;\n  var _didIteratorError16 = false;\n  var _iteratorError16 = undefined;\n\n  try {\n    for (var _iterator16 = interfacesDiff.removed[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n      var oldInterface = _step16.value;\n      schemaChanges.push({\n        type: BreakingChangeType.INTERFACE_REMOVED_FROM_OBJECT,\n        description: \"\".concat(oldType.name, \" no longer implements interface \").concat(oldInterface.name, \".\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError16 = true;\n    _iteratorError16 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n        _iterator16.return();\n      }\n    } finally {\n      if (_didIteratorError16) {\n        throw _iteratorError16;\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  var schemaChanges = [];\n  var fieldsDiff = diff(objectValues(oldType.getFields()), objectValues(newType.getFields()));\n  var _iteratorNormalCompletion17 = true;\n  var _didIteratorError17 = false;\n  var _iteratorError17 = undefined;\n\n  try {\n    for (var _iterator17 = fieldsDiff.removed[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n      var oldField = _step17.value;\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_REMOVED,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" was removed.\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError17 = true;\n    _iteratorError17 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n        _iterator17.return();\n      }\n    } finally {\n      if (_didIteratorError17) {\n        throw _iteratorError17;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion18 = true;\n  var _didIteratorError18 = false;\n  var _iteratorError18 = undefined;\n\n  try {\n    for (var _iterator18 = fieldsDiff.persisted[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n      var _ref8 = _step18.value;\n      var _oldField2 = _ref8[0];\n      var newField = _ref8[1];\n      schemaChanges.push.apply(schemaChanges, findArgChanges(oldType, _oldField2, newField));\n      var isSafe = isChangeSafeForObjectOrInterfaceField(_oldField2.type, newField.type);\n\n      if (!isSafe) {\n        schemaChanges.push({\n          type: BreakingChangeType.FIELD_CHANGED_KIND,\n          description: \"\".concat(oldType.name, \".\").concat(_oldField2.name, \" changed type from \") + \"\".concat(String(_oldField2.type), \" to \").concat(String(newField.type), \".\")\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError18 = true;\n    _iteratorError18 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion18 && _iterator18.return != null) {\n        _iterator18.return();\n      }\n    } finally {\n      if (_didIteratorError18) {\n        throw _iteratorError18;\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  var schemaChanges = [];\n  var argsDiff = diff(oldField.args, newField.args);\n  var _iteratorNormalCompletion19 = true;\n  var _didIteratorError19 = false;\n  var _iteratorError19 = undefined;\n\n  try {\n    for (var _iterator19 = argsDiff.removed[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n      var oldArg = _step19.value;\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_REMOVED,\n        description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(oldArg.name, \" was removed.\")\n      });\n    }\n  } catch (err) {\n    _didIteratorError19 = true;\n    _iteratorError19 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion19 && _iterator19.return != null) {\n        _iterator19.return();\n      }\n    } finally {\n      if (_didIteratorError19) {\n        throw _iteratorError19;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion20 = true;\n  var _didIteratorError20 = false;\n  var _iteratorError20 = undefined;\n\n  try {\n    for (var _iterator20 = argsDiff.persisted[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n      var _ref10 = _step20.value;\n      var _oldArg = _ref10[0];\n      var newArg = _ref10[1];\n      var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(_oldArg.type, newArg.type);\n\n      if (!isSafe) {\n        schemaChanges.push({\n          type: BreakingChangeType.ARG_CHANGED_KIND,\n          description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed type from \") + \"\".concat(String(_oldArg.type), \" to \").concat(String(newArg.type), \".\")\n        });\n      } else if (_oldArg.defaultValue !== undefined) {\n        if (newArg.defaultValue === undefined) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" defaultValue was removed.\")\n          });\n        } else {\n          var oldValueStr = stringifyValue(_oldArg.defaultValue, _oldArg.type);\n          var newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n          if (oldValueStr !== newValueStr) {\n            schemaChanges.push({\n              type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n              description: \"\".concat(oldType.name, \".\").concat(oldField.name, \" arg \").concat(_oldArg.name, \" has changed defaultValue from \").concat(oldValueStr, \" to \").concat(newValueStr, \".\")\n            });\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError20 = true;\n    _iteratorError20 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion20 && _iterator20.return != null) {\n        _iterator20.return();\n      }\n    } finally {\n      if (_didIteratorError20) {\n        throw _iteratorError20;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion21 = true;\n  var _didIteratorError21 = false;\n  var _iteratorError21 = undefined;\n\n  try {\n    for (var _iterator21 = argsDiff.added[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n      var _newArg = _step21.value;\n\n      if (isRequiredArgument(_newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_ARG_ADDED,\n          description: \"A required arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n        });\n      } else {\n        schemaChanges.push({\n          type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n          description: \"An optional arg \".concat(_newArg.name, \" on \").concat(oldType.name, \".\").concat(oldField.name, \" was added.\")\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError21 = true;\n    _iteratorError21 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion21 && _iterator21.return != null) {\n        _iterator21.return();\n      }\n    } finally {\n      if (_didIteratorError21) {\n        throw _iteratorError21;\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (// if they're both lists, make sure the underlying types are compatible\n      isListType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) || // moving from nullable to non-null of the same underlying type is safe\n      isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n\n  return (// if they're both named types, see if their names are equivalent\n    isNamedType(newType) && oldType.name === newType.name || // moving from nullable to non-null of the same underlying type is safe\n    isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return isListType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  }\n\n  if (isNonNullType(oldType)) {\n    return (// if they're both non-null, make sure the underlying types are\n      // compatible\n      isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) || // moving from non-null to nullable of the same underlying type is safe\n      !isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  } // if they're both named types, see if their names are equivalent\n\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  }\n\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  } // Not reachable. All possible named types have been considered.\n\n  /* istanbul ignore next */\n\n\n  throw new TypeError(\"Unexpected type: \".concat(inspect(type), \".\"));\n}\n\nfunction stringifyValue(value, type) {\n  var ast = astFromValue(value, type);\n  !(ast != null) ? invariant(0) : void 0;\n  return print(ast);\n}\n\nfunction diff(oldArray, newArray) {\n  var added = [];\n  var removed = [];\n  var persisted = [];\n  var oldMap = keyMap(oldArray, function (_ref11) {\n    var name = _ref11.name;\n    return name;\n  });\n  var newMap = keyMap(newArray, function (_ref12) {\n    var name = _ref12.name;\n    return name;\n  });\n  var _iteratorNormalCompletion22 = true;\n  var _didIteratorError22 = false;\n  var _iteratorError22 = undefined;\n\n  try {\n    for (var _iterator22 = oldArray[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n      var oldItem = _step22.value;\n      var newItem = newMap[oldItem.name];\n\n      if (newItem === undefined) {\n        removed.push(oldItem);\n      } else {\n        persisted.push([oldItem, newItem]);\n      }\n    }\n  } catch (err) {\n    _didIteratorError22 = true;\n    _iteratorError22 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion22 && _iterator22.return != null) {\n        _iterator22.return();\n      }\n    } finally {\n      if (_didIteratorError22) {\n        throw _iteratorError22;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion23 = true;\n  var _didIteratorError23 = false;\n  var _iteratorError23 = undefined;\n\n  try {\n    for (var _iterator23 = newArray[Symbol.iterator](), _step23; !(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done); _iteratorNormalCompletion23 = true) {\n      var _newItem = _step23.value;\n\n      if (oldMap[_newItem.name] === undefined) {\n        added.push(_newItem);\n      }\n    }\n  } catch (err) {\n    _didIteratorError23 = true;\n    _iteratorError23 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion23 && _iterator23.return != null) {\n        _iterator23.return();\n      }\n    } finally {\n      if (_didIteratorError23) {\n        throw _iteratorError23;\n      }\n    }\n  }\n\n  return {\n    added: added,\n    persisted: persisted,\n    removed: removed\n  };\n}\n"],"file":"findBreakingChanges.js"}