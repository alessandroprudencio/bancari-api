{"version":3,"sources":["../../../../node_modules/graphql/polyfills/find.mjs"],"names":["find","Array","prototype","list","predicate","call","i","length","value"],"mappings":"AAAA;AACA;AACA,IAAIA,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBF,IAAhB,GAAuB,UAAUG,IAAV,EAAgBC,SAAhB,EAA2B;AAC3D,SAAOH,KAAK,CAACC,SAAN,CAAgBF,IAAhB,CAAqBK,IAArB,CAA0BF,IAA1B,EAAgCC,SAAhC,CAAP;AACD,CAFU,GAEP,UAAUD,IAAV,EAAgBC,SAAhB,EAA2B;AAC7B,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,KAAK,GAAGL,IAAI,CAACG,CAAD,CAAhB;;AAEA,QAAIF,SAAS,CAACI,KAAD,CAAb,EAAsB;AACpB,aAAOA,KAAP;AACD;AACF;AACF,CAVD;AAWA,eAAeR,IAAf","sourcesContent":["/* eslint-disable no-redeclare */\n// $FlowFixMe\nvar find = Array.prototype.find ? function (list, predicate) {\n  return Array.prototype.find.call(list, predicate);\n} : function (list, predicate) {\n  for (var i = 0; i < list.length; i++) {\n    var value = list[i];\n\n    if (predicate(value)) {\n      return value;\n    }\n  }\n};\nexport default find;\n"],"file":"find.js"}