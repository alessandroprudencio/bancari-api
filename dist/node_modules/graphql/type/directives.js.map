{"version":3,"sources":["../../../../node_modules/graphql/type/directives.mjs"],"names":["objectEntries","isObjectLike","argsToArgsConfig","GraphQLNonNull","GraphQLString","GraphQLBoolean","defineToStringTag","defineToJSON","instanceOf","invariant","inspect","DirectiveLocation","isDirective","directive","GraphQLDirective","assertDirective","concat","config","name","description","locations","isRepeatable","astNode","Array","isArray","args","map","_ref","argName","arg","undefined","type","defaultValue","_proto","prototype","toString","toConfig","GraphQLIncludeDirective","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","if","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","FIELD_DEFINITION","ENUM_VALUE","reason","specifiedDirectives","Object","freeze","isSpecifiedDirective","some","_ref2"],"mappings":"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","sourcesContent":["import objectEntries from '../polyfills/objectEntries';\nimport isObjectLike from '../jsutils/isObjectLike';\nimport { argsToArgsConfig, GraphQLNonNull } from './definition';\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport defineToStringTag from '../jsutils/defineToStringTag';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport instanceOf from '../jsutils/instanceOf';\nimport invariant from '../jsutils/invariant';\nimport inspect from '../jsutils/inspect';\nimport { DirectiveLocation } from '../language/directiveLocation';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  !isDirective(directive) ? invariant(0, \"Expected \".concat(inspect(directive), \" to be a GraphQL directive.\")) : void 0;\n  return directive;\n}\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\nexport var GraphQLDirective =\n/*#__PURE__*/\nfunction () {\n  function GraphQLDirective(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = config.isRepeatable != null && config.isRepeatable;\n    this.astNode = config.astNode;\n    !config.name ? invariant(0, 'Directive must be named.') : void 0;\n    !Array.isArray(config.locations) ? invariant(0, \"@\".concat(config.name, \" locations must be an Array.\")) : void 0;\n    var args = config.args || {};\n    !(isObjectLike(args) && !Array.isArray(args)) ? invariant(0, \"@\".concat(config.name, \" args must be an object with argument names as keys.\")) : void 0;\n    this.args = objectEntries(args).map(function (_ref) {\n      var argName = _ref[0],\n          arg = _ref[1];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n\n  var _proto = GraphQLDirective.prototype;\n\n  _proto.toString = function toString() {\n    return '@' + this.name;\n  };\n\n  _proto.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      astNode: this.astNode\n    };\n  };\n\n  return GraphQLDirective;\n}(); // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(GraphQLDirective);\ndefineToJSON(GraphQLDirective);\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexport var specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective]);\nexport function isSpecifiedDirective(directive) {\n  return isDirective(directive) && specifiedDirectives.some(function (_ref2) {\n    var name = _ref2.name;\n    return name === directive.name;\n  });\n}\n"],"file":"directives.js"}